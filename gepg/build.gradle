plugins {
    id 'java'
    id 'jacoco'
    id 'maven-publish'
    id 'com.github.kt3k.coveralls' version '2.12.2'
}

jacoco {
    toolVersion = "0.8.7" // Specify the JaCoCo version you want to use
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport // Report is always generated after tests run
}

jacocoTestReport {
    reports {
        xml.required = true
        html.required = true
    }
}

group = 'com.watabelabs'
version = '1.0-SNAPSHOT'

def githubProperties = new Properties()
if (rootProject.file("github.properties").exists()) {
    githubProperties.load(new FileInputStream(rootProject.file("github.properties")))
}

publishing {

    repositories {
        maven {
            name = "GitHubPackages"
            /** Configure path of your package repository on Github
             ** Replace GITHUB_USERID with your/organisation Github userID
             ** and REPOSITORY with the repository name on GitHub
             */
            url = uri("https://maven.pkg.github.com/watabelabs/gepg")
            credentials {
                /** Create github.properties in root project folder file with
                 ** gpr.usr=GITHUB_USER_ID & gpr.key=PERSONAL_ACCESS_TOKEN
                 ** Set env variable GPR_debugdebugUSER & GPR_API_KEY if not adding a properties file**/

                username = githubProperties['gpr.usr'] ?: System.getenv("GITHUB_ACTOR")
                password = githubProperties['gpr.key'] ?: System.getenv("GITHUB_TOKEN")
            }
        }
    }
    def getArtifactId = {
        return "sample-library"
    }
    publications {
        bar(MavenPublication) {
            groupId group // Library groupID
            artifactId getArtifactId()
            version version
            artifact("$buildDir/libs/${getArtifactId()}-$version" + ".jar")

            //This is to cater for transitive dependencies within this library
            pom.withXml {
                final dependenciesNode = asNode().appendNode('dependencies')
                ext.addDependency = { Dependency dep, String scope ->
                    if (dep.group == null || dep.version == null || dep.name == null || dep.name == 'unspecified')
                        return
                    final dependencyNode = dependenciesNode.appendNode('dependency')
                    dependencyNode.appendNode('groupId', dep.group)
                    dependencyNode.appendNode('artifactId', dep.name)
                    dependencyNode.appendNode('version', dep.version)
                    dependencyNode.appendNode('scope', scope)
                    if (!dep.transitive) {
                        final exclusionNode = dependencyNode.appendNode('exclusions').appendNode('exclusion')
                        exclusionNode.appendNode('groupId', '*')
                        exclusionNode.appendNode('artifactId', '*')
                    } else if (!dep.properties.excludeRules.empty) {
                        final exclusionsNode = dependencyNode.appendNode('exclusions')
                        dep.properties.excludeRules.each { ExcludeRule rule ->
                            def exclusion = exclusionsNode.appendNode('exclusion')
                            exclusion.appendNode('groupId', rule.group ?: '*')
                            exclusion.appendNode('artifactId', rule.module ?: '*')
                        }
                    }
                }
                configurations.implementation.getDependencies().each { dep -> addDependency(dep, 'implementation') }
            }

        }
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // JUnit for testing
    testImplementation platform('org.junit:junit-bom:5.9.1')
    testImplementation 'org.junit.jupiter:junit-jupiter'

    // JAXB API and implementation
    implementation 'javax.xml.bind:jaxb-api:2.3.1'
    implementation 'com.sun.xml.bind:jaxb-impl:2.3.2'
    implementation 'com.sun.istack:istack-commons-runtime:3.0.8'

    // BouncyCastle libraries for cryptography
    implementation 'org.bouncycastle:bcprov-jdk15on:1.70'
    implementation 'org.bouncycastle:bcpkix-jdk15on:1.70'

    // Hibernate Validator for Bean Validation
    implementation 'org.hibernate.validator:hibernate-validator:6.1.5.Final'
    implementation 'javax.validation:validation-api:2.0.1.Final'
}

test {
    useJUnitPlatform()
}

coveralls {
    jacocoReportPath 'build/reports/jacoco/jacocoTestReport/jacocoTestReport.xml'
}

tasks.coveralls {
    dependsOn 'jacocoTestReport'
}

