plugins {
    id 'java'
    id 'jacoco'
    id 'maven-publish'
    id 'com.github.kt3k.coveralls' version '2.12.2'
}

jacoco {
    toolVersion = "0.8.7"
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

jacocoTestReport {
    reports {
        xml.required = true
        html.required = true
    }
}

group = 'com.watabelabs'
version = '1.0-SNAPSHOT'

def githubProperties = new Properties()
if (rootProject.file("github.properties").exists()) {
    githubProperties.load(new FileInputStream(rootProject.file("github.properties")))
}

publishing {
    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/zechtz/gepg-java")
            credentials {
                username = githubProperties['gpr.usr'] ?: System.getenv("GITHUB_ACTOR")
                password = githubProperties['gpr.key'] ?: System.getenv("GITHUB_TOKEN")
            }
        }
    }
    publications {
        mavenJava(MavenPublication) {
            from components.java
            pom {
                name.set("GePG Java Library")
                description.set("A Java library for GePG integration")
                url.set("https://github.com/zechtz/gepg-java")
                licenses {
                    license {
                        name.set("The MIT License")
                        url.set("https://opensource.org/licenses/MIT")
                    }
                }
                developers {
                    developer {
                        id.set("watabelabs")
                        name.set("Watabe Labs")
                        email.set("contact@watabelabs.com")
                    }
                }
                scm {
                    connection.set("scm:git:git://github.com/zechtz/gepg-java.git")
                    developerConnection.set("scm:git:ssh://github.com/zechtz/gepg-java.git")
                    url.set("https://github.com/zechtz/gepg-java")
                }
            }
        }
    }
}

repositories {
    mavenCentral()
}

dependencies {
    testImplementation platform('org.junit:junit-bom:5.9.1')
    testImplementation 'org.junit.jupiter:junit-jupiter'
    testImplementation 'org.slf4j:slf4j-api:2.0.3'
    testImplementation 'com.github.tomakehurst:wiremock:2.27.2'
    testImplementation 'com.sparkjava:spark-core:2.9.3'
    implementation 'javax.xml.bind:jaxb-api:2.3.1'
    implementation 'com.sun.xml.bind:jaxb-impl:2.3.2'
    implementation 'com.sun.istack:istack-commons-runtime:3.0.8'
    implementation 'org.bouncycastle:bcprov-jdk15on:1.70'
    implementation 'org.bouncycastle:bcpkix-jdk15on:1.70'
    implementation 'org.hibernate.validator:hibernate-validator:6.1.5.Final'
    implementation 'javax.validation:validation-api:2.0.1.Final'
}

test {
    useJUnitPlatform()
}

coveralls {
    jacocoReportPath 'build/reports/jacoco/jacocoTestReport/jacocoTestReport.xml'
}

tasks.coveralls {
    dependsOn 'jacocoTestReport'
}

